Desarrollo web Fullstack - BackEnd (inicio 08.07)-20240905 0414-1.mp4
Desarrollo web Fullstack - BackEnd (inicio 08.07)-20240906 0415-1.mp4
creamos nuestra rama para poder trabajar
git checkout -b v_ignacio
git add -A
git add .
git commit -m ""
git push -u origin v_ignacio
para forzar los cambios
git push -f origin v_ignacio


verificamos la si tenemos node instalado
nvs use latest
para la creacion de nuestro poryecto
npm init
Crear el archivo schema.prisma si no existe:
npx prisma init
para instalar expressnom i express join
npm i express joi
para instalar nodemon
npm i --save-dev nodemon @types/express
para instalar morgan
npm i morgan
npm install -g npm
npx i --save-dev prisma
npm i --save-dev prisma

para que le de formato a prisma
npx prisma format

npm i express-async-handler
antes de hacer la migracion es necesario adicionar en el package.json debajo del main
"type": "module",
crea solo la migracion despues de haber creado la base de datos
npx prisma migrate dev --create-only

ejecuta las migraciones faltantes
npx prisma migrate deploy

npx prisma generate
npx prisma migrate dev --create-only
npx prisma migrate deploy
npm run dev

npx prisma generate
npx prisma migrate dev
para ejecutar nuestro servidor
npm run dev

para el caso que se modifico el esquema
npx prisma format
para ejecutar las migraciones
npx prisma migrate dev


*************
para el envio de correos
npm install nodemailer


post
http://127.0.0.1:3000/empresas
{
    "nombre": "Empresa Ejemplo",
    "ruc": "12345678901",
    "direccion": "Calle Falsa 123",
    "telefono": "987654321",
    "correo_electronico": "empresa@ejemplo.com"
}
get
http://127.0.0.1:3000/empresas
post
http://localhost:3000/proyectos
{
    "nombre": "Proyecto X",
    "descripcion": "Descripción del proyecto X",
    "fecha_inicio": "2024-09-18T00:00:00Z",
    "fecha_fin": "2024-12-31T00:00:00Z",
    "empresaId": 1
}
get
http://localhost:3000/proyectos
post
http://localhost:3000/articulos
{
    "nombre": "Artículo de prueba",
    "descripcion": "Descripción del artículo de prueba",
    "precio": 99.99
}
get
http://localhost:3000/articulos
post
http://localhost:3000/cotizacion
{
  "numero_cotizacion": "COT12346",
  "fecha_cotizacion": "2024-09-18T10:00:00.000Z",
  "estado_cotizacion": "PENDIENTE",
  "proyectoId": 1,
  "detalle_cotizaciones": [
    {
      "item": 1,
      "cantidad": 10,
      "precio": 99.99,
      "articuloId": 1
    },
    {
      "item": 2,
      "cantidad": 5,
      "precio": 99.99,
      "articuloId": 2
    },
    {
      "item": 3,
      "cantidad": 51,
      "precio": 99.99,
      "articuloId": 2
    }
  ]
}
get
http://localhost:3000/cotizacion
post
http://localhost:3000/oservicios
{
    "numero_orden": "OS00004",
    "fecha_orden": "2024-09-20",
    "estaddo_orden": "PENDIENTE", // Asegúrate de que este valor sea uno de los valores permitidos en tu enum
    "cotizacion_id": 1 // ID de la cotización existente
}

get
http://localhost:3000/oservicios





DATABASE_URL_2=postgresql://postgres:46711302@localhost:5432/cotizador
PORT=3000
EMAIL_USER=tu_email@gmail.com
EMAIL_PASS=tu_contraseña_o_token




para el frontend para su ejecucion nos ubicamos en la carpeta del frontend y ejecutamos el siguiente  comando:
http-server


npm install react-bootstrap
npm start



control de los articulos cuando se agregaron 
es con respecto a un control de inventarios 