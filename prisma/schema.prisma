// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Empresa {
  id                 Int      @id @default(autoincrement())
  nombre             String   @db.Text
  ruc                String   @db.Text
  direccion          String   @db.Text
  telefono           String   @db.Text
  correo_electronico String   @unique @db.Text
  habilitado         Boolean  @default(true)
  createdAt          DateTime @default(now())

  //RELACIONES CON LA TABLA DE PROYECTOS
  proyectos Proyecto[] //Relacion de 1.* con la tabla proyecto

  @@map("empresas")
}

model Proyecto {
  id           Int       @id @default(autoincrement())
  nombre       String    @db.Text
  descripcion  String    @db.Text
  fecha_inicio DateTime  @db.Date
  fecha_fin    DateTime? @db.Date
  createdAt    DateTime  @default(now())

  //RELACION CON LAS TABLAS DE EMPRESAS Y COTIZACIONES
  empresaId    Int          @map("empresa_id")
  empresas     Empresa      @relation(fields: [empresaId], references: [id])
  cotizaciones Cotizacion[]

  @@map("proyectos")
}

model Cotizacion {
  id                Int      @id @default(autoincrement())
  numero_cotizacion String   @unique @db.Text
  fecha_cotizacion  DateTime @db.Date
  estado_cotizacion ESTADO   @default(PENDIENTE)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  //RELACION CON TABLAS DE COTIZACIONES, PROYECTOS Y ORDENES DE SERVICIO
  detalle_cotizaciones DetalleCotizacion[] //Relacion de 1.* con la tabla detalle_cotizaciones
  proyectoId           Int                 @unique @map("proyecto_id")
  proyectos            Proyecto            @relation(fields: [proyectoId], references: [id])
  oservicios           OrdenServicio? //Relacion de 1.1 con la tabla de OrdenServicio

  @@map("cotizaciones")
}

model DetalleCotizacion {
  id              Int   @id @default(autoincrement())
  item            Int   @db.Integer
  cotizacionId    Int   @map("cotizacion_id")
  cantidad        Int
  precio_unitario Float

  //RELACION CON TABLAS DE COTIZACION Y ARTICULOS
  cotizaciones Cotizacion @relation(fields: [cotizacionId], references: [id])

  articuloId Int      @map("articulo_id")
  articulos  Articulo @relation(fields: [articuloId], references: [id])

  @@map("detalle_cotizaciones")
}

model Articulo {
  id          Int      @id @default(autoincrement())
  nombre      String   @db.Text
  descripcion String   @db.Text
  precio      Float
  createdAt   DateTime @default(now())

  detalle_cotizaciones DetalleCotizacion[]
  detalle_ordenes      DetalleOrden[]

  @@map("articulos")
}

model OrdenServicio {
  id            Int      @id @default(autoincrement())
  numero_orden  String   @unique @db.Text
  fecha_orden   DateTime @db.Date
  estaddo_orden ESTADO
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  //RELACION CON LA TABLA DE COTIZACION
  cotizacionId Int        @unique @map("cotizacion_id") //Relacion de 1.1
  cotizaciones Cotizacion @relation(fields: [cotizacionId], references: [id])

  detalle_ordenes DetalleOrden[] //Relacion de 1.* con la tabla DetalleOrden

  @@map("oservicios")
}

model DetalleOrden {
  id              Int   @id @default(autoincrement())
  item            Int   @db.Integer
  cantidad        Int
  precio_unitario Float
  ordenServicioId Int   @map("oservicio_id")

  //RELACION CON TABLAS DE ORDENES DE SERVICIO Y ARTICULOS
  articuloId Int           @map("articulo_id")
  articulos  Articulo      @relation(fields: [articuloId], references: [id])
  oservicios OrdenServicio @relation(fields: [ordenServicioId], references: [id])

  @@map("detalle_ordenes")
}

enum ESTADO {
  PENDIENTE
  ACEPTADA
  RECHAZADA
  CANCELADA
}
